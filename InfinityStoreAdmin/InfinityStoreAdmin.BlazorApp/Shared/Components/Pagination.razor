
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item">
            <button class="page-link" @onclick="() => SetPage(1)" disabled="@IsFirstPage()">First</button>
        </li>
        <li class="page-item">
            <button class="page-link" @onclick="PreviousPage" disabled="@IsFirstPage()">Previous</button>
        </li>

        @{
            var startPage = Math.Max(1, CurrentPage - 2);
            var endPage = Math.Min(TotalPages, CurrentPage + 2);

            for (var i = startPage; i <= endPage; i++)
            {
                var localPage = i;
                <li class="page-item @(i == CurrentPage ? "active" : "")">
                    <button class="page-link" @onclick="() => SetPage(localPage)">@localPage</button>
                </li>
            }
        }


        <li class="page-item">
            <button class="page-link" @onclick="NextPage" disabled="@IsLastPage()">Next</button>
        </li>
        <li class="page-item">
            <button class="page-link" @onclick="() => SetPage(TotalPages)" disabled="@IsLastPage()">Last</button>
        </li>
    </ul>
</nav>



@code {

    [Parameter] 
    public int TotalItemCount { get; set; }
    [Parameter] 
    public int ItemsPerPage { get; set; }
    [Parameter] 
    public int CurrentPage { get; set; }
    [Parameter] 
    public Action<int> OnPageChanged { get; set; }

    //on init
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    private int TotalPages => (int)Math.Ceiling(TotalItemCount / (double)ItemsPerPage);

    private void SetPage(int page)
    {
        if (page < 1 || page > TotalPages) return;

        CurrentPage = page;
        OnPageChanged.Invoke(CurrentPage);
    }

    private void NextPage()
    {
        if (CurrentPage < TotalPages)
        {
            SetPage(CurrentPage + 1);
        }
    }

    private void PreviousPage()
    {
        if (CurrentPage > 1)
        {
            SetPage(CurrentPage - 1);
        }
    }

    private bool IsFirstPage() => CurrentPage == 1;
    private bool IsLastPage() => CurrentPage == TotalPages;
}
